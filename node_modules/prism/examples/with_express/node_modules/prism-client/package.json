{
  "name": "prism-client",
  "description": "Connect to a Prism realtime server",
  "version": "0.0.1",
  "author": {
    "name": "Owen Barnes",
    "email": "owen@socketstream.org"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "dependencies": {
    "realtime-service-client": "~0.0.1"
  },
  "scripts": {
    "build-docs": "echo \"# Prism Client API\n\" > API.md; dox --api < index.js >> API.md"
  },
  "readme": "# Prism Client\n\nConnect to a [Prism Server](https://github.com/socketstream/prism) from the browser or a remote Node app.\n\n\n## Example\n\n```js\nvar prismClient = require('prism-client');\nvar rtt = require('rtt-engineio')();\n\nvar transport = rtt.client({port: 3001, host: 'localhost'});\nvar app = prismClient();\n\napp.connect(function(err, info){\n\n  console.log(\"Connected to Prism Server %s with Session ID %s\", info.version, info.sessionId);\n  \n  app.discover(function(){\n    console.log('Available services are', app.api);\n  });\n\n});\n```\n\n## API\n\n[View API](/API.md)\n\n\n## Connecting from another Node process\n\nPlease see the REPL client example in `examples/repl.js`.\n\nNote: Not all transports support Node.js clients. `rtt-engineio` and `rtt-ws` do.\n\n\n## Connecting from a PhoneGap app\n\nI've not tried this yet, but in theory it should be possible. You may need to use [PersistJS](https://github.com/jeremydurham/persist-js). Please get in touch to let me know how you get on.\n\n\n## Providing Services\n\nA [Prism Server](https://github.com/socketstream/prism) will be running one or more [Realtime Services](https://github.com/socketstream/realtime-service). Each Service will probably (but not necessarily) contain code to be run on the client (accessible via the `app.api` object).\n\nClient's can either be told what services are available in advance (using `app.provide()`), or discover them upon connection (using `app.discover()`).\n\nWe recommending providing service info in advance where possible as this minimizes the traffic over the WebSocket. It also allows for the client-side code to be minimized and served by CDNs.\n\nPrism Server can make this easy for you by building a custom client module containing all the code you need for the transport and services. Just call `server.buildClient();`.\n\nHowever it's not always possible to know what Services are provided by a server until you connect. For example, you may want to run a query over the REPL against a remote server. In this case, you'll need to call `app.discover()` upon initial connection.\n\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "_id": "prism-client@0.0.1",
  "_from": "prism-client@~0.0.1"
}
